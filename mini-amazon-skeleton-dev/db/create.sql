-- Clean start while developing (safe in dev; remove in prod)
DROP TABLE IF EXISTS OrderItems CASCADE;
DROP TABLE IF EXISTS Orders CASCADE;
DROP TABLE IF EXISTS CartItems CASCADE;
DROP TABLE IF EXISTS Carts CASCADE;
DROP TABLE IF EXISTS Inventory CASCADE;
DROP TABLE IF EXISTS Wishes CASCADE;
DROP TABLE IF EXISTS Purchases CASCADE;
DROP TABLE IF EXISTS Products CASCADE;
DROP TABLE IF EXISTS Users CASCADE;
DROP TABLE IF EXISTS ProductReviews CASCADE;
DROP TABLE IF EXISTS SellerReviews CASCADE;

-- Users
CREATE TABLE Users (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    address VARCHAR(255),
    balance DECIMAL(12,2) NOT NULL DEFAULT 0.00
);

-- Products
CREATE TABLE Products (
    product_id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) UNIQUE NOT NULL,
    price DECIMAL(12,2) NOT NULL,
    description VARCHAR(255) NOT NULL,
    seller_id INTEGER REFERENCES Users(id),
    available BOOLEAN DEFAULT TRUE,
    image VARCHAR(1024),
    category VARCHAR(255)
);

-- Purchases (sample/demo table from skeleton)
CREATE TABLE Purchases (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    uid INT NOT NULL REFERENCES Users(id),
    pid INT NOT NULL REFERENCES Products(product_id),
    time_purchased TIMESTAMP WITHOUT TIME ZONE NOT NULL
      DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

-- Wishes
CREATE TABLE Wishes (
    id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    uid INT NOT NULL REFERENCES Users(id),
    product_id INT NOT NULL REFERENCES Products(product_id),
    time_added TIMESTAMP WITHOUT TIME ZONE NOT NULL
      DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    CONSTRAINT wishes_user_product_uniq UNIQUE(uid, product_id)
);

-- Inventory (per-team design)
CREATE TABLE Inventory (
    inventory_id SERIAL PRIMARY KEY,
    user_id INT NOT NULL REFERENCES Users(id),
    product_id INT NOT NULL REFERENCES Products(product_id),
    quantity INT NOT NULL CHECK (quantity >= 0),
    price DECIMAL(12, 2) NOT NULL CHECK (price >= 0),
    price_updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL
      DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

-- Carts (one active cart per user)
CREATE TABLE Carts (
    cart_id SERIAL PRIMARY KEY,
    user_id INT NOT NULL REFERENCES Users(id) UNIQUE,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Cart Items
CREATE TABLE CartItems (
    cart_item_id SERIAL PRIMARY KEY,
    cart_id INT NOT NULL REFERENCES Carts(cart_id),
    inventory_id INT NOT NULL REFERENCES Inventory(inventory_id),
    quantity_required INT NOT NULL CHECK (quantity_required > 0)
);

-- Orders
CREATE TABLE Orders (
    order_id SERIAL PRIMARY KEY,
    user_id INT NOT NULL REFERENCES Users(id),
    time_ordered TIMESTAMP NOT NULL DEFAULT NOW(),
    total_price DECIMAL(12,2) NOT NULL,
    status VARCHAR(30) NOT NULL
      -- e.g., 'Pending', 'Successful', 'Failed', 'Partially Fulfilled', etc.
);

-- Order Items
CREATE TABLE OrderItems (
    order_item_id SERIAL PRIMARY KEY,
    order_id INT NOT NULL REFERENCES Orders(order_id),
    inventory_id INT NOT NULL REFERENCES Inventory(inventory_id),
    quantity_required INT NOT NULL CHECK (quantity_required > 0),
    final_unit_price DECIMAL(12,2) NOT NULL,
    individual_fulfillment VARCHAR(30)
      -- e.g., 'Pending', 'Not Yet Fulfilled', 'Fully Fulfilled', etc.
);

-- Seller Reviews
CREATE TABLE SellerReviews (
    review_id    SERIAL PRIMARY KEY,
    reviewer_id  INT NOT NULL REFERENCES Users(id),
    seller_id    INT NOT NULL REFERENCES Users(id),
    rating       INT NOT NULL CHECK (rating BETWEEN 1 AND 5),
    feedback     VARCHAR(300),
    created_at   TIMESTAMP WITHOUT TIME ZONE NOT NULL
                 DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    CONSTRAINT seller_reviews_one_per_pair UNIQUE (reviewer_id, seller_id),
    CONSTRAINT seller_reviews_no_self CHECK (reviewer_id <> seller_id)
);

-- Product Reviews
CREATE TABLE ProductReviews (
    review_id   SERIAL PRIMARY KEY,
    product_id  INT NOT NULL REFERENCES Products(product_id),
    user_id     INT NOT NULL REFERENCES Users(id),
    rating      INT NOT NULL CHECK (rating BETWEEN 1 AND 5),
    feedback    VARCHAR(300),
    created_at  TIMESTAMP WITHOUT TIME ZONE NOT NULL
                DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    CONSTRAINT product_reviews_one_per_pair UNIQUE (product_id, user_id)
);